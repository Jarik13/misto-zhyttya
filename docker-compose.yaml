services:
  ### API Gateway
  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      AUTH_SERVICE_URL: http://auth-service:4001
    depends_on:
      - auth-service

  ### Auth Service
  auth-service:
    container_name: auth-service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "4001:4001"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:5432/auth-service-db
      SPRING_DATASOURCE_USERNAME: username
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      OAUTH2_CLIENT_GOOGLE_CLIENT_ID: ${OAUTH2_CLIENT_GOOGLE_CLIENT_ID}
      OAUTH2_CLIENT_GOOGLE_CLIENT_SECRET: ${OAUTH2_CLIENT_GOOGLE_CLIENT_SECRET}
      OAUTH2_CLIENT_GITHUB_CLIENT_ID: ${OAUTH2_CLIENT_GITHUB_CLIENT_ID}
      OAUTH2_CLIENT_GITHUB_CLIENT_SECRET: ${OAUTH2_CLIENT_GITHUB_CLIENT_SECRET}
    depends_on:
      - auth-db

  ### PostgreSQL for Auth Service
  auth-db:
    image: postgres:latest
    container_name: auth-db
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: auth-service-db
      PGDATA: /data/postgres
    volumes:
      - auth_service_data:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

volumes:
  auth_service_data: